{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Falih\\\\Documents\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/messages');\n        const result = await response.json();\n        if (response.ok && result.success) {\n          setMessages(result.data);\n        } else {\n          throw new Error(result.error || 'Failed to fetch messages');\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n  }, []);\n  const addMessage = async message => {\n    try {\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: message\n      });\n      const result = await response.json();\n      if (response.ok && result.success) {\n        setMessages(prev => [result.data, ...prev]);\n        setError(null);\n      } else {\n        throw new Error(result.error || 'Failed to send message');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"cs3D4i5NKu67WmfKAPFvxZcuk7s=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","MessageList","MessageInput","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","loading","setLoading","error","setError","fetchMessages","response","fetch","result","json","ok","success","data","Error","err","message","addMessage","method","headers","body","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","marginBottom","onClick","marginLeft","onSend","_c","$RefreshReg$"],"sources":["C:/Users/Falih/Documents/chat-app/client/src/components/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/api/messages');\n                const result = await response.json();\n                \n                if (response.ok && result.success) {\n                    setMessages(result.data);\n                } else {\n                    throw new Error(result.error || 'Failed to fetch messages');\n                }\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchMessages();\n    }, []);\n\n    const addMessage = async (message) => {\n        try {\n            const response = await fetch('http://localhost:5000/api/messages', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: (message),\n            });\n\n            const result = await response.json();\n\n            if (response.ok && result.success) {\n                setMessages(prev => [result.data, ...prev]);\n                setError(null);\n            } else {\n                throw new Error(result.error || 'Failed to send message');\n            }\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    if (loading) return <div>Loading...</div>;\n\n    return (\n        <div>\n            {error && (\n                <div style={{ color: 'red', padding: '10px', marginBottom: '10px' }}>\n                    {error}\n                    <button onClick={() => setError(null)} style={{ marginLeft: '10px' }}>\n                        âœ•\n                    </button>\n                </div>\n            )}\n            <MessageList messages={messages} />\n            <MessageInput onSend={addMessage} />\n        </div>\n    );\n};\n\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}